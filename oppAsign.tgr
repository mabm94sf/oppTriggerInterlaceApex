trigger oppAsign on Opportunity (before insert) {

    /*Determinar el tipo de vendedor al que se le asignará
     * dependiendo el tipo de proyecto y el importe de la oportunidad
     * Tipo               | Venta                 |Renta
     * -----------------------------------------------------------------
     * Tipo I             |> $ 100,000            |> $ 500,000
     * Tipo II            |  $  20,000 - $99,999  |  $ 100,000 - $499,999
     * Tipo III           |  $   5,000 - $19,999  |  $       0 - $ 99,999
     * Regresamos |String salesperson_type|
     */
    String salesperson_type;
    String tipo1='Tipo I';
    String tipo2='Tipo II';
    String tipo3='Tipo III';

   for (Opportunity opp : Trigger.new){
       if(opp.Amount < 0) opp.addError('El monto debe ser un valor positivo.');
       
    if(opp.Tipo_de_proyecto__c=='Venta')
    {
        if(opp.Amount < 5000) opp.addError('El monto de un proyecto de tipo venta no puede ser menor a $5,000.00');
        if(opp.Amount>=5000 && opp.Amount<20000)
            salesperson_type = tipo3;
        else if(opp.Amount>=20000 && opp.Amount<=100000)
            salesperson_type = tipo2;
        else
            salesperson_type = tipo1;
    }
       else if(opp.Tipo_de_proyecto__c=='Renta')
       {
           if(opp.Amount>=0 && opp.Amount<100000)
            salesperson_type = tipo3;
        else if(opp.Amount>=100000 && opp.Amount<500000)
            salesperson_type = tipo2;
        else
            salesperson_type = tipo1;
       }
   else
   {
       opp.addError('Debe especificar el tipo de proyecto');
       return;
   }

    /*Hacer query de la cola que tenga ese nombre
     * Regresamos |ID queueID|
    */
    Group queue_o = [SELECT id,name from Group where Name=:salesperson_type and Type = 'Queue' ][0];
    Id queueID = queue_o.Id;
    if(queueID == null) opp.addError('No existe la cola \'' + salesperson_type + '\'.');
    /*Consultar lista de usuarios que permanezcan a esa cola
     * Regresamos |List<User> queueusers|
    */
    List<GroupMember> members_in_queue = [SELECT UserOrGroupId FROM GroupMember WHERE Group.Id =:queueID];
    if(members_in_queue.isEmpty()) opp.addError('No hay miembros en la cola ' + salesperson_type);
    List<ID> user_ids = new List<ID>();
    for (GroupMember gm : members_in_queue)
    {
        user_ids.add(gm.UserOrGroupID);
    }
    List<User> queueusers = [SELECT id,name FROM User WHERE id=:user_ids];

    /*Revisar quién tiene menos oportunidades
     * Regresamos |User selected_user|
    */
       integer  aux=65000; //Infinity
       integer count;
       User selected_user = new User();
    for (User u : queueusers)
    {
     count = [SELECT count() from Opportunity where ownerid=:u.id];
        if(count<aux)
            {
                aux=count;
                selected_user=u;
            }
    }
    /*Asignar la oportunidad al usuario seleccionado*/
    opp.OwnerId= selected_user.id;
   }
}
